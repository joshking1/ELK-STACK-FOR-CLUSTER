apiVersion: apps/v1
kind: Deployment
metadata:
  name: logstash-deployment
  namespace: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: logstash
  template:
    metadata:
      labels:
        app: logstash
    spec:
      containers:
      - name: logstash
        image: docker.elastic.co/logstash/logstash:6.3.0
        ports:
        - containerPort: 5044
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /
            port: 9600
          initialDelaySeconds: 60
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /
            port: 9600
          initialDelaySeconds: 30
          timeoutSeconds: 5
        volumeMounts:
          - name: config-volume
            mountPath: /usr/share/logstash/config
          - name: logstash-pipeline-volume
            mountPath: /usr/share/logstash/pipeline
          - name: geoip-database
            mountPath: /usr/share/logstash/GeoLite2-City.mmdb
            subPath: GeoLite2-City.mmdb
      volumes:
      - name: config-volume
        configMap:
          name: logstash-configmap
          items:
            - key: logstash.yml
              path: logstash.yml
      - name: logstash-pipeline-volume
        configMap:
          name: logstash-configmap
          items:
            - key: logstash.conf
              path: logstash.conf
      - name: geoip-database
        configMap:
          name: geoip-database-configmap # This ConfigMap should include the GeoIP database
          items:
            - key: GeoLite2-City.mmdb
              path: GeoLite2-City.mmdb
---
apiVersion: v1
kind: Service
metadata:
  name: logstash-service
  namespace: dev
spec:
  selector:
    app: logstash
  ports:
  - protocol: TCP
    port: 5044
    targetPort: 5044
  type: ClusterIP
